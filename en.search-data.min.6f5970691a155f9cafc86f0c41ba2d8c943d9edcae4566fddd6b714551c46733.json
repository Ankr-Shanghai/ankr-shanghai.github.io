[{"id":0,"href":"/docs/introduce/email_recovery/","title":"Email Recovery","section":"Introduce","content":"\rEmail Recovery\r#\rWhen using non-custodial smart contract wallets, once users lose access to the key due to all sorts of reasons, they won’t be able to control the account anymore. To regain their control, the users need to replace the account’s key through account recovery.\nWith our unique on-chain email verification technology, users can set multiple internet emails as guardians of the account, which can help users achieve account recovery by simply submitting emails to smart contract on chain. This greatly lowers the requirement on guardians and allows all your family members and friends with emails to become guardians of your account.\nAA Wallet allowed the difficulty to owning and guarding a wallet account to Web2 level, giving users a smart contract account truly easy to understand, operate, and manage.\nPrivacy preserving\r#\rBecause Web2 accounts’ private account information is stored in centralized servers outsiders cannot access, in normal circumstances these private information would not be leaked. Since AA Wallet is a non-custodial smart contract wallet, even though it stores users’ sensitive information after hashing, when such information is verified on chain, it is still possible that it could be exposed.\n"},{"id":1,"href":"/docs/sdk/login/","title":"Login","section":"Sdk","content":"\rGoogle Login\r#\r{\r\u0026quot;url\u0026quot;:\u0026quot;/google/login\u0026quot;,\r\u0026quot;method\u0026quot;:\u0026quot;post\u0026quot;,\r\u0026quot;data\u0026quot;:formdata, // Data returned after successful Google login\r}\rFacebook Login\r#\r{\r\u0026quot;url\u0026quot;:\u0026quot;/facebook/login\u0026quot;,\r\u0026quot;method\u0026quot;:\u0026quot;post\u0026quot;,\r\u0026quot;data\u0026quot;:formdata, // Data returned after successful login from facebook\r} "},{"id":2,"href":"/docs/getting_started/quick_login/","title":"Quick Login","section":"Getting Started","content":"\rWe currently only support Google account login\rsetup 1\r#\rYou need to agree to our terms of use and statement before you can log in\nsetup 2\r#\rSelect the Google account you want to log in and click\nsetup 3\r#\rAfter successful login, you can see the following page\n"},{"id":3,"href":"/docs/sdk/account_recovery/","title":"Account Recovery","section":"Sdk","content":"\rAccount Recovery\r#\r{\r\u0026quot;url\u0026quot;:\u0026quot;/recover/login\u0026quot;,\r\u0026quot;method\u0026quot;:\u0026quot;post\u0026quot;,\r\u0026quot;data\u0026quot;:{\r\u0026quot;email_address\u0026quot;: \u0026quot;email address\u0026quot;,\r\u0026quot;verify_code\u0026quot;: \u0026quot;verify code\u0026quot;\r}\r} "},{"id":4,"href":"/docs/introduce/multi_chain_support/","title":"Multi Chain Support","section":"Introduce","content":"\rMulti-chain Support\r#\rAA Wallet supports all EVM-compatible chains and gives users the same address across all chains using EIP-2470. Currently supported chains are:\nMainNet\r#\rAPE Chain(BAS) Base Mainnet Linea Mainnet TestNet\r#\rCoq Testnet Base Testnet Linea Testnet "},{"id":5,"href":"/docs/getting_started/switch_network/","title":"Switch Network","section":"Getting Started","content":"You can switch to any of our supported networks using the Switch Network function\nsetup 1\r#\rClick on the current network\nsetup 2\r#\rIn the pop-up network list, click the target network you want to switch to.\n"},{"id":6,"href":"/docs/sdk/balance_inquiry/","title":"Balance Inquiry","section":"Sdk","content":"\rBalance Inquiry\r#\r{\r\u0026quot;url\u0026quot;:\u0026quot;/balance_of\u0026quot;,\r\u0026quot;method\u0026quot;:\u0026quot;get\u0026quot;,\r\u0026quot;data\u0026quot;:{\r\u0026quot;owner\u0026quot;: \u0026quot;owner address\u0026quot;,\r\u0026quot;token\u0026quot;: \u0026quot;token address\u0026quot;,\r}\r} "},{"id":7,"href":"/docs/getting_started/send/","title":"Send","section":"Getting Started","content":"You can use the send function to transfer token or nft\nsetup 1\r#\rClick the send icon\nsetup 2\r#\rAfter entering the transfer destination address and the amount to be transferred, click the send button.\nsetup 3\r#\rSelect the payment method you need and click the submit button\nNative Payment\nUse native tokens to pay fees\nErc20 Paymaster\nUse other tokens to pay fees\n"},{"id":8,"href":"/docs/introduce/what_is_erc4337/","title":"What Is Erc4377","section":"Introduce","content":"\rWhat is ERC-4337\r#\rERC-4337(Account Abstraction via Entry Point Contract specification) is a specification that aims to use entry point contract to achieve account abstraction without changing the consensus layer protocol of Ethereum.\nERC-4337 is still in draft stage and not finalized yet. But since ERC-4337 will not change the consensus layer, there are already implementations available like OpenZeppelin and Stackup.\nERC-4337 defines some new rules, like introducing higher-layer pseudo-transaction object called UserOperation, use bundlers to package a set of these objects into a transaction for batch verification and execution, and introducing paymaster mechanism that can achieve decentralized gas fee payment sponsorship.\n"},{"id":9,"href":"/docs/sdk/transaction_or_authorization/","title":"Transaction or Authorization","section":"Sdk","content":"\rFirst format the data to be sent\r#\rexport const getFromatData=(params:any)=\u0026gt;{\r// tokenContract：Contract address abi：abi file\rconst contract = new ethers.Contract(params.tokenContract, params.abi);\r// methods：abi method to be called abiInput：Parameters corresponding to this method\rconst data = '0x' + contract.interface.encodeFunctionData(params.methods, params.abiInput).substr(2);\rreturn data;\r} "},{"id":10,"href":"/docs/getting_started/activity/","title":"Activity","section":"Getting Started","content":"Activity can view the transaction history sent\nsetup 1\r#\rClick on the activity to switch to the activity list page\nsetup 2\r#\rClick on the list item. In the pop-up window, you can see the transaction hash and user operation hash. You can click on the hash to open the corresponding browser to view the details of the transaction.\n"},{"id":11,"href":"/docs/sdk/transaction_or_authorization/call_transaction/","title":"Call Transaction","section":"Transaction or Authorization","content":"\rCall Transaction\r#\r{\r\u0026quot;url\u0026quot;:\u0026quot;/token/wallet/user_operation\u0026quot;,\r\u0026quot;method\u0026quot;:\u0026quot;post\u0026quot;,\r\u0026quot;data\u0026quot;:{\r\u0026quot;to\u0026quot;:address, // Contract or erc20 address\r\u0026quot;value\u0026quot;:values, // Transfer amount or 0\r\u0026quot;data\u0026quot;:data, // encodeFunctionData returned by getFromatData method\r}\r} "},{"id":12,"href":"/docs/getting_started/import_token/","title":"Import Token","section":"Getting Started","content":"You can import your other token assets through this function\nsetup 1\r#\rClick import tokens\nsetup 2\r#\rPaste the asset contract address you want to add in the input box and click the add button.\n"},{"id":13,"href":"/docs/sdk/transaction_or_authorization/authorization_example/","title":"Authorization Example","section":"Transaction or Authorization","content":"\rAuthorization Example\r#\rawait userOperation({\r\u0026quot;address\u0026quot;:\u0026quot;0x....\u0026quot;,\r\u0026quot;data\u0026quot;:getFromatData({\r\u0026quot;tokenContract\u0026quot;:0x....,\r\u0026quot;abi\u0026quot;:Erc721ABI,\r\u0026quot;abiInput\u0026quot;:[0x0.... , tokenId],\r\u0026quot;methods\u0026quot;:approve\r});\r}); "},{"id":14,"href":"/menu/","title":"Menu","section":"Introduction","content":" Introduce\nEmail Recovery\nMulti Chain Support\nWhat Is Erc4337 Getting Started\nQuick Login\nSwitch Network\nSend\nActivity\nImport Token SDK\nAccount Recovery\nBalance Inquiry\nLogin\nTransaction Or Authorization\n"}]